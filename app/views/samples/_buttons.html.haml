%section#buttons
  .page-header
    %h1 Buttons <small>bootstrap-buttons.js</small>
  .row
    .span4.columns
      %p This plugin offers additional functionality for managing button state.
    .span12.columns
      %h3 Using bootstrap-buttons.js
      %pre.prettyprint
        :preserve
          $('.tabs').button()
      %h3 Methods
      %h4 $().button('toggle')
      %p Toggles push state. Gives btn the look that it's been activated.
      %p
        %span.label.notice Notice
        You can enable auto toggling of a button by using the <code>data-toggle</code> attribute.
      %pre.prettyprint
        :preserve
          &lt;button class="btn" data-toggle="toggle" &gt;...&lt;/button&gt;
      %h4 $().button('loading')
      %p Sets button state to loading - disables button and swaps text to loading text. Loading text should be defined on the button element using the data attribute <code>data-loading-text</code>.
      %pre.prettyprint
        :preserve
          &lt;button class="btn" data-loading-text="loading stuff..." &gt;...&lt;/button&gt;
      %h4 $().button('reset')
      %p Resets button state - swaps text to original text.
      %h4 $().button(string)
      %p Resets button state - swaps text to any data defined text state.
      %pre.prettyprint
        :preserve
          &lt;button class="btn" data-complete-text="finished!" &gt;...&lt;/button&gt;
          &lt;script&gt;
            $('.btn').button('complete')
          &lt;/scrip&gt;
      %h3 Demo
      %button#fat-btn.btn.danger{ "data-loading-text" => "loading..." } Loading Demo
      %button.btn{ "data-toggle" => "toggle" } Toggle Demo
      :javascript
        $(function() {
          var btn = $('#fat-btn').click(function () {
            btn.button('loading')
            setTimeout(function () {
              btn.button('reset')
            }, 3000)
          })
        })

